[
  {
    "id": "05.4-cross-domain-examples-0",
    "originalQuery": "SELECT \n    pe.PAT_ENC_CSN_ID,\n    pe.CONTACT_DATE,\n    pdx.LINE as dx_sequence,\n    edg.DX_NAME as primary_diagnosis,\n    pe.HOSP_ADMSN_TIME,\n    pe.HOSP_DISCHRG_TIME\nFROM PAT_ENC pe\nJOIN PAT_ENC_DX pdx ON pe.PAT_ENC_CSN_ID = pdx.PAT_ENC_CSN_ID\nJOIN CLARITY_EDG edg ON pdx.DX_ID = edg.DX_ID\nWHERE pdx.LINE = 1  -- Primary diagnosis only\n  AND pe.HOSP_ADMSN_TIME IS NOT NULL  -- Hospital encounters\nORDER BY pe.CONTACT_DATE DESC\nLIMIT 10;",
    "description": "Identify encounters with primary diagnoses",
    "chapterId": "05.4-cross-domain-examples",
    "index": 0,
    "results": [
      {
        "PAT_ENC_CSN_ID": 1028743701,
        "CONTACT_DATE": "9/28/2023 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Screening for diabetes mellitus",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 991225117,
        "CONTACT_DATE": "9/28/2023 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Screening for hyperlipidemia",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 720803470,
        "CONTACT_DATE": "8/9/2018 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Encounter to establish care",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 724628999,
        "CONTACT_DATE": "8/9/2018 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Encounter to establish care",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 958147754,
        "CONTACT_DATE": "8/29/2022 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Primary hypertension",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 948004323,
        "CONTACT_DATE": "8/29/2022 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Primary hypertension",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 725327197,
        "CONTACT_DATE": "8/18/2018 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Gastroesophageal reflux disease, esophagitis presence not specified",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 832464108,
        "CONTACT_DATE": "7/31/2020 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Traumatic injury of head, initial encounter",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 829995922,
        "CONTACT_DATE": "7/21/2020 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Traumatic injury of head, initial encounter",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      },
      {
        "PAT_ENC_CSN_ID": 829467718,
        "CONTACT_DATE": "7/16/2020 12:00:00 AM",
        "dx_sequence": 1,
        "primary_diagnosis": "Traumatic injury of head, initial encounter",
        "HOSP_ADMSN_TIME": "",
        "HOSP_DISCHRG_TIME": ""
      }
    ],
    "columns": [
      "PAT_ENC_CSN_ID",
      "CONTACT_DATE",
      "dx_sequence",
      "primary_diagnosis",
      "HOSP_ADMSN_TIME",
      "HOSP_DISCHRG_TIME"
    ],
    "error": null
  },
  {
    "id": "05.4-cross-domain-examples-1",
    "originalQuery": "WITH encounter_diagnoses AS (\n    SELECT \n        pe.PAT_ENC_CSN_ID,\n        pe.CONTACT_DATE,\n        edg.DX_NAME as primary_diagnosis,\n        pe.HSP_ACCOUNT_ID\n    FROM PAT_ENC pe\n    JOIN PAT_ENC_DX pdx ON pe.PAT_ENC_CSN_ID = pdx.PAT_ENC_CSN_ID\n    JOIN CLARITY_EDG edg ON pdx.DX_ID = edg.DX_ID\n    WHERE pdx.LINE = 1\n      AND pe.HSP_ACCOUNT_ID IS NOT NULL\n)\nSELECT \n    ed.PAT_ENC_CSN_ID,\n    ed.CONTACT_DATE,\n    ed.primary_diagnosis,\n    -- Professional charges\n    COALESCE(SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Charge' THEN at.AMOUNT ELSE 0 END), 0) as prof_charges,\n    -- Payments and adjustments\n    COALESCE(SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Payment' THEN at.AMOUNT ELSE 0 END), 0) as payments,\n    COALESCE(SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Adjustment' THEN at.AMOUNT ELSE 0 END), 0) as adjustments\nFROM encounter_diagnoses ed\nLEFT JOIN ARPB_VISITS av ON ed.PAT_ENC_CSN_ID = av.PRIM_ENC_CSN_ID\nLEFT JOIN ARPB_TRANSACTIONS at ON av.PB_VISIT_NUM = at.VISIT_NUMBER\nGROUP BY ed.PAT_ENC_CSN_ID, ed.CONTACT_DATE, ed.primary_diagnosis\nHAVING prof_charges > 0\nORDER BY prof_charges DESC;",
    "description": "Link clinical encounters to financial charges",
    "chapterId": "05.4-cross-domain-examples",
    "index": 1,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "05.4-cross-domain-examples-2",
    "originalQuery": "WITH provider_visits AS (\n    -- Count encounters by provider\n    SELECT \n        pe.VISIT_PROV_ID,\n        COUNT(DISTINCT pe.PAT_ENC_CSN_ID) as total_encounters,\n        COUNT(DISTINCT pe.PAT_ID) as unique_patients,\n        COUNT(DISTINCT DATE(pe.CONTACT_DATE)) as days_worked\n    FROM PAT_ENC pe\n    WHERE pe.VISIT_PROV_ID IS NOT NULL\n      AND pe.CONTACT_DATE >= date('now', '-90 days')\n    GROUP BY pe.VISIT_PROV_ID\n),\nprovider_revenue AS (\n    -- Calculate revenue by billing provider\n    SELECT \n        at.BILLING_PROV_ID,\n        SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Charge' THEN at.AMOUNT ELSE 0 END) as total_charges,\n        SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Payment' THEN -at.AMOUNT ELSE 0 END) as total_payments,\n        COUNT(DISTINCT at.ACCOUNT_ID) as billed_accounts\n    FROM ARPB_TRANSACTIONS at\n    WHERE at.BILLING_PROV_ID IS NOT NULL\n      AND at.SERVICE_DATE >= date('now', '-90 days')\n    GROUP BY at.BILLING_PROV_ID\n)\nSELECT \n    ser.PROV_ID,\n    ser.PROV_NAME,\n    -- Clinical metrics\n    pv.total_encounters,\n    pv.unique_patients,\n    ROUND(CAST(pv.total_encounters AS REAL) / pv.days_worked, 1) as encounters_per_day,\n    -- Financial metrics\n    pr.total_charges,\n    pr.total_payments,\n    ROUND(pr.total_payments * 100.0 / NULLIF(pr.total_charges, 0), 1) as collection_rate,\n    -- Efficiency metrics\n    ROUND(pr.total_charges / NULLIF(pv.total_encounters, 0), 2) as avg_charge_per_visit\nFROM CLARITY_SER ser\nLEFT JOIN provider_visits pv ON ser.PROV_ID = pv.VISIT_PROV_ID\nLEFT JOIN provider_revenue pr ON ser.PROV_ID = pr.BILLING_PROV_ID\nWHERE pv.total_encounters > 0\nORDER BY pr.total_charges DESC;",
    "description": "Provider productivity metrics",
    "chapterId": "05.4-cross-domain-examples",
    "index": 2,
    "results": [
      {
        "PROV_ID": "144590",
        "PROV_NAME": "RAMMELKAMP, ZOE L",
        "total_encounters": 8,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": 1562,
        "total_payments": 0,
        "collection_rate": 0,
        "avg_charge_per_visit": 195.25
      },
      {
        "PROV_ID": "802011",
        "PROV_NAME": "DHILLON, PUNEET S",
        "total_encounters": 4,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": 486,
        "total_payments": 0,
        "collection_rate": 0,
        "avg_charge_per_visit": 121.5
      },
      {
        "PROV_ID": "219711",
        "PROV_NAME": "PICONE, MARY A",
        "total_encounters": 6,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": 170,
        "total_payments": 0,
        "collection_rate": 0,
        "avg_charge_per_visit": 28.33
      },
      {
        "PROV_ID": "3724611",
        "PROV_NAME": "MAC LAB APL",
        "total_encounters": 4,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      },
      {
        "PROV_ID": "508903",
        "PROV_NAME": "LOUGH, KAREN L",
        "total_encounters": 3,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      },
      {
        "PROV_ID": "519715",
        "PROV_NAME": "WHITTINGTON, THERESA C",
        "total_encounters": 1,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      },
      {
        "PROV_ID": "522795",
        "PROV_NAME": "PEPIN, PAMELA A",
        "total_encounters": 1,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      },
      {
        "PROV_ID": "529098",
        "PROV_NAME": "BUDZBAN, NICOLE L",
        "total_encounters": 1,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      },
      {
        "PROV_ID": "554383",
        "PROV_NAME": "WILD, DAWN M",
        "total_encounters": 1,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      },
      {
        "PROV_ID": "599471",
        "PROV_NAME": "GILMOUR, AARON K",
        "total_encounters": 2,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      },
      {
        "PROV_ID": "8800099",
        "PROV_NAME": "GENERIC EXTERNAL DATA PROVIDER",
        "total_encounters": 2,
        "unique_patients": 1,
        "encounters_per_day": null,
        "total_charges": null,
        "total_payments": null,
        "collection_rate": null,
        "avg_charge_per_visit": null
      }
    ],
    "columns": [
      "PROV_ID",
      "PROV_NAME",
      "total_encounters",
      "unique_patients",
      "encounters_per_day",
      "total_charges",
      "total_payments",
      "collection_rate",
      "avg_charge_per_visit"
    ],
    "error": null
  },
  {
    "id": "05.4-cross-domain-examples-3",
    "originalQuery": "WITH chronic_patients AS (\n    -- Identify patients with chronic conditions\n    SELECT DISTINCT\n        ppl.PAT_ID,\n        edg.DX_NAME as chronic_condition,\n        pbl.NOTED_DATE as diagnosis_date\n    FROM PROBLEM_LIST pbl\n    JOIN PAT_PROBLEM_LIST ppl ON pbl.PROBLEM_LIST_ID = ppl.PROBLEM_LIST_ID_\n    JOIN CLARITY_EDG edg ON pbl.DX_ID = edg.DX_ID\n    WHERE pbl.RESOLVED_DATE IS NULL  -- Active problems\n),\npatient_utilization AS (\n    -- Calculate utilization for chronic patients\n    SELECT \n        cp.PAT_ID,\n        cp.chronic_condition,\n        COUNT(DISTINCT pe.PAT_ENC_CSN_ID) as total_encounters,\n        COUNT(DISTINCT CASE \n            WHEN pe.HOSP_ADMSN_TIME IS NOT NULL \n            THEN pe.PAT_ENC_CSN_ID \n        END) as hospital_admissions,\n        MIN(pe.CONTACT_DATE) as first_visit,\n        MAX(pe.CONTACT_DATE) as last_visit\n    FROM chronic_patients cp\n    JOIN PAT_ENC pe ON cp.PAT_ID = pe.PAT_ID\n    WHERE pe.CONTACT_DATE >= cp.diagnosis_date\n    GROUP BY cp.PAT_ID, cp.chronic_condition\n),\npatient_costs AS (\n    -- Calculate total costs by patient\n    SELECT \n        pe.PAT_ID,\n        SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Charge' THEN at.AMOUNT ELSE 0 END) as total_charges,\n        SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Payment' THEN -at.AMOUNT ELSE 0 END) as total_payments,\n        SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Adjustment' THEN -at.AMOUNT ELSE 0 END) as total_adjustments\n    FROM PAT_ENC pe\n    JOIN ARPB_VISITS av ON pe.PAT_ENC_CSN_ID = av.PRIM_ENC_CSN_ID\n    JOIN ARPB_TRANSACTIONS at ON av.PB_VISIT_NUM = at.VISIT_NUMBER\n    GROUP BY pe.PAT_ID\n)\nSELECT \n    pu.chronic_condition,\n    COUNT(DISTINCT pu.PAT_ID) as patient_count,\n    AVG(pu.total_encounters) as avg_encounters,\n    AVG(pu.hospital_admissions) as avg_admissions,\n    SUM(pc.total_charges) as total_charges,\n    AVG(pc.total_charges) as avg_charges_per_patient,\n    -- Calculate cost per encounter\n    ROUND(SUM(pc.total_charges) / NULLIF(SUM(pu.total_encounters), 0), 2) as avg_charge_per_encounter\nFROM patient_utilization pu\nJOIN patient_costs pc ON pu.PAT_ID = pc.PAT_ID\nGROUP BY pu.chronic_condition\nORDER BY total_charges DESC;",
    "description": "Chronic disease cost analysis",
    "chapterId": "05.4-cross-domain-examples",
    "index": 3,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "05.4-cross-domain-examples-4",
    "originalQuery": "WITH index_admissions AS (\n    -- Find hospital admissions with key diagnoses\n    SELECT \n        pe.PAT_ID,\n        pe.PAT_ENC_CSN_ID as index_csn,\n        pe.HOSP_ADMSN_TIME as admission_date,\n        pe.HOSP_DISCHRG_TIME as discharge_date,\n        edg.DX_NAME as primary_diagnosis,\n        ROW_NUMBER() OVER (\n            PARTITION BY pe.PAT_ID \n            ORDER BY pe.HOSP_ADMSN_TIME\n        ) as admission_sequence\n    FROM PAT_ENC pe\n    JOIN PAT_ENC_DX pdx ON pe.PAT_ENC_CSN_ID = pdx.PAT_ENC_CSN_ID\n    JOIN CLARITY_EDG edg ON pdx.DX_ID = edg.DX_ID\n    WHERE pdx.LINE = 1  -- Primary diagnosis\n      AND pe.HOSP_DISCHRG_TIME IS NOT NULL\n      AND pe.HOSP_ADMSN_TIME IS NOT NULL\n),\nreadmissions AS (\n    -- Find readmissions within 30 days\n    SELECT \n        idx.PAT_ID,\n        idx.index_csn,\n        idx.primary_diagnosis as index_diagnosis,\n        idx.discharge_date as index_discharge,\n        readm.PAT_ENC_CSN_ID as readmit_csn,\n        readm.HOSP_ADMSN_TIME as readmit_date,\n        JULIANDAY(readm.HOSP_ADMSN_TIME) - JULIANDAY(idx.discharge_date) as days_to_readmit\n    FROM index_admissions idx\n    JOIN PAT_ENC readm \n        ON idx.PAT_ID = readm.PAT_ID\n        AND readm.HOSP_ADMSN_TIME > idx.discharge_date\n        AND readm.HOSP_ADMSN_TIME <= datetime(idx.discharge_date, '+30 days')\n        AND readm.HOSP_ADMSN_TIME IS NOT NULL\n)\nSELECT \n    r.index_diagnosis,\n    COUNT(DISTINCT r.index_csn) as index_admissions,\n    COUNT(DISTINCT r.readmit_csn) as readmissions_30day,\n    ROUND(COUNT(DISTINCT r.readmit_csn) * 100.0 / COUNT(DISTINCT r.index_csn), 1) as readmission_rate,\n    AVG(r.days_to_readmit) as avg_days_to_readmit\nFROM readmissions r\nGROUP BY r.index_diagnosis\nHAVING COUNT(DISTINCT r.index_csn) > 0\nORDER BY readmission_rate DESC;",
    "description": "Identify 30-day readmissions",
    "chapterId": "05.4-cross-domain-examples",
    "index": 4,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "05.4-cross-domain-examples-5",
    "originalQuery": "WITH recent_activity AS (\n    -- Last 7 days of activity\n    SELECT \n        pe.PAT_ENC_CSN_ID,\n        pe.CONTACT_DATE,\n        pe.PAT_ID,\n        pe.VISIT_PROV_ID,\n        pe.HSP_ACCOUNT_ID,\n        CASE \n            WHEN pe.HOSP_ADMSN_TIME IS NOT NULL THEN 'Inpatient'\n            ELSE 'Outpatient'\n        END as encounter_class\n    FROM PAT_ENC pe\n    WHERE pe.CONTACT_DATE >= date('now', '-7 days')\n),\nfinancial_summary AS (\n    -- Financial metrics for recent encounters\n    SELECT \n        ra.encounter_class,\n        COUNT(DISTINCT ra.PAT_ENC_CSN_ID) as encounters,\n        COUNT(DISTINCT ra.PAT_ID) as unique_patients,\n        SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Charge' THEN at.AMOUNT ELSE 0 END) as charges,\n        SUM(CASE WHEN at.TX_TYPE_C_NAME = 'Payment' THEN -at.AMOUNT ELSE 0 END) as payments\n    FROM recent_activity ra\n    LEFT JOIN ARPB_VISITS av ON ra.PAT_ENC_CSN_ID = av.PRIM_ENC_CSN_ID\n    LEFT JOIN ARPB_TRANSACTIONS at ON av.PB_VISIT_NUM = at.VISIT_NUMBER\n    GROUP BY ra.encounter_class\n),\nprovider_workload AS (\n    -- Provider activity\n    SELECT \n        COUNT(DISTINCT VISIT_PROV_ID) as active_providers,\n        COUNT(DISTINCT PAT_ENC_CSN_ID) as total_visits,\n        ROUND(COUNT(DISTINCT PAT_ENC_CSN_ID) * 1.0 / COUNT(DISTINCT VISIT_PROV_ID), 1) as avg_visits_per_provider\n    FROM recent_activity\n    WHERE VISIT_PROV_ID IS NOT NULL\n)\nSELECT \n    'Operational Summary - Last 7 Days' as report_title,\n    date('now') as report_date,\n    -- Volume metrics\n    (SELECT SUM(encounters) FROM financial_summary) as total_encounters,\n    (SELECT SUM(unique_patients) FROM financial_summary) as unique_patients,\n    -- Financial metrics\n    (SELECT SUM(charges) FROM financial_summary) as total_charges,\n    (SELECT SUM(payments) FROM financial_summary) as total_payments,\n    (SELECT ROUND(SUM(payments) * 100.0 / NULLIF(SUM(charges), 0), 1) FROM financial_summary) as collection_rate,\n    -- Provider metrics\n    (SELECT active_providers FROM provider_workload) as active_providers,\n    (SELECT avg_visits_per_provider FROM provider_workload) as avg_visits_per_provider;",
    "description": "Current operational metrics",
    "chapterId": "05.4-cross-domain-examples",
    "index": 5,
    "results": [
      {
        "report_title": "Operational Summary - Last 7 Days",
        "report_date": "2025-06-27",
        "total_encounters": 74,
        "unique_patients": 1,
        "total_charges": 2218,
        "total_payments": 0,
        "collection_rate": 0,
        "active_providers": 11,
        "avg_visits_per_provider": 3
      }
    ],
    "columns": [
      "report_title",
      "report_date",
      "total_encounters",
      "unique_patients",
      "total_charges",
      "total_payments",
      "collection_rate",
      "active_providers",
      "avg_visits_per_provider"
    ],
    "error": null
  }
]