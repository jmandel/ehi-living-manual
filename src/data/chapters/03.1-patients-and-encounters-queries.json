[
  {
    "id": "03.1-patients-and-encounters-0",
    "originalQuery": "-- Every patient has one row with basic demographics\nSELECT \n  PAT_ID,\n  PAT_NAME,\n  BIRTH_DATE,\n  -- Key identifiers\n  SSN,\n  MEDICARE_NUM,\n  MEDICAID_NUM,\n  -- Location info\n  CITY,\n  STATE_C_NAME,\n  ZIP,\n  -- Contact\n  HOME_PHONE,\n  EMAIL_ADDRESS\nFROM PATIENT\nWHERE PAT_ID = '28411874';",
    "description": "View core patient demographics",
    "chapterId": "03.1-patients-and-encounters",
    "index": 0,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-1",
    "originalQuery": "-- See how different identifiers are stored\nSELECT \n  PAT_ID,\n  PAT_MRN_ID,\n  -- Government identifiers (handle with care!)\n  CASE WHEN SSN IS NOT NULL THEN 'Has SSN' ELSE 'No SSN' END as ssn_status,\n  CASE WHEN MEDICARE_NUM IS NOT NULL THEN 'Has Medicare' ELSE 'No Medicare' END as medicare_status,\n  CASE WHEN MEDICAID_NUM IS NOT NULL THEN 'Has Medicaid' ELSE 'No Medicaid' END as medicaid_status\nFROM PATIENT\nWHERE PAT_ID = '28411874';",
    "description": "Explore patient identifier patterns",
    "chapterId": "03.1-patients-and-encounters",
    "index": 1,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-2",
    "originalQuery": "-- Patient names can have many variations\nSELECT \n  p.PAT_ID,\n  p.PAT_NAME,                    -- \"Lastname, Firstname MI\" format\n  p.PAT_FIRST_NAME,\n  p.PAT_MIDDLE_NAME,\n  p.PAT_LAST_NAME,\n  -- Additional name fields from PATIENT_3\n  p3.PREFERRED_NAME              -- What they want to be called\nFROM PATIENT p\nLEFT JOIN PATIENT_3 p3 ON p.PAT_ID = p3.PAT_ID\nWHERE p.PAT_ID = '28411874';",
    "description": "Understand patient name components",
    "chapterId": "03.1-patients-and-encounters",
    "index": 2,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-3",
    "originalQuery": "-- Each row is one patient interaction\nSELECT \n  PAT_ENC_CSN_ID,              -- The golden key!\n  CONTACT_DATE,\n  APPT_STATUS_C_NAME,          -- Scheduled, Completed, Canceled, No Show\n  DEPARTMENT_ID,\n  VISIT_PROV_ID,               -- Primary provider for this visit\n  -- Hospital-specific fields\n  HOSP_ADMSN_TIME,             -- When admitted\n  HOSP_DISCHRG_TIME            -- When discharged\nFROM PAT_ENC\nWHERE PAT_ID = '28411874'\nORDER BY CONTACT_DATE DESC\nLIMIT 10;",
    "description": "Explore encounter basics",
    "chapterId": "03.1-patients-and-encounters",
    "index": 3,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-4",
    "originalQuery": "-- See how Epic handles multiple encounters per day\nSELECT \n  PAT_ENC_CSN_ID,\n  PAT_ENC_DATE_REAL,\n  CONTACT_DATE,\n  -- Extract components\n  CAST(PAT_ENC_DATE_REAL AS INTEGER) as date_portion,\n  ROUND((PAT_ENC_DATE_REAL - CAST(PAT_ENC_DATE_REAL AS INTEGER)) * 100, 0) as sequence\nFROM PAT_ENC\nWHERE PAT_ID = '28411874'\n  AND PAT_ENC_DATE_REAL != CAST(PAT_ENC_DATE_REAL AS INTEGER)  -- Has decimal\nORDER BY PAT_ENC_DATE_REAL;",
    "description": "Decode the date encoding",
    "chapterId": "03.1-patients-and-encounters",
    "index": 4,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-5",
    "originalQuery": "-- See the full lifecycle of scheduled healthcare\nSELECT \n  APPT_STATUS_C_NAME,\n  COUNT(*) as encounter_count,\n  -- Calculate rates\n  ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (), 1) as percentage\nFROM PAT_ENC\nWHERE PAT_ID = '28411874'\nGROUP BY APPT_STATUS_C_NAME\nORDER BY encounter_count DESC;",
    "description": "Analyze appointment completion patterns",
    "chapterId": "03.1-patients-and-encounters",
    "index": 5,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-6",
    "originalQuery": "-- The primary diagnosis drives billing and reporting\nSELECT \n  pe.PAT_ENC_CSN_ID,\n  pe.CONTACT_DATE,\n  pe.DEPARTMENT_ID,\n  dx.LINE,                     -- 1 = primary, 2+ = secondary\n  dx.PRIMARY_DX_YN,            -- Explicit primary flag\n  edg.DX_NAME\nFROM PAT_ENC pe\nJOIN PAT_ENC_DX dx ON pe.PAT_ENC_CSN_ID = dx.PAT_ENC_CSN_ID\nJOIN CLARITY_EDG edg ON dx.DX_ID = edg.DX_ID\nWHERE pe.PAT_ID = 'Z7004242'\n  AND dx.PRIMARY_DX_YN = 'Y'\nORDER BY pe.CONTACT_DATE DESC\nLIMIT 10;",
    "description": "Find primary diagnoses across encounters",
    "chapterId": "03.1-patients-and-encounters",
    "index": 6,
    "results": [
      {
        "PAT_ENC_CSN_ID": 991225117,
        "CONTACT_DATE": "9/28/2023 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 3,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Preventative health care"
      },
      {
        "PAT_ENC_CSN_ID": 720803470,
        "CONTACT_DATE": "8/9/2018 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Encounter to establish care"
      },
      {
        "PAT_ENC_CSN_ID": 948004323,
        "CONTACT_DATE": "8/29/2022 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 2,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Preventative health care"
      },
      {
        "PAT_ENC_CSN_ID": 829995922,
        "CONTACT_DATE": "7/21/2020 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Traumatic injury of head, initial encounter"
      },
      {
        "PAT_ENC_CSN_ID": 829467718,
        "CONTACT_DATE": "7/16/2020 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Traumatic injury of head, initial encounter"
      },
      {
        "PAT_ENC_CSN_ID": 829393933,
        "CONTACT_DATE": "7/15/2020 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Traumatic injury of head, initial encounter"
      },
      {
        "PAT_ENC_CSN_ID": 829213099,
        "CONTACT_DATE": "7/14/2020 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Traumatic injury of head, initial encounter"
      },
      {
        "PAT_ENC_CSN_ID": 958148810,
        "CONTACT_DATE": "3/2/2023 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Post concussion syndrome"
      },
      {
        "PAT_ENC_CSN_ID": 921952141,
        "CONTACT_DATE": "2/9/2022 12:00:00 AM",
        "DEPARTMENT_ID": 101401088,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Late effect of traumatic injury to brain"
      },
      {
        "PAT_ENC_CSN_ID": 977858467,
        "CONTACT_DATE": "12/22/2022 12:00:00 AM",
        "DEPARTMENT_ID": 1700801002,
        "LINE": 1,
        "PRIMARY_DX_YN": "Y",
        "DX_NAME": "Post concussion syndrome"
      }
    ],
    "columns": [
      "PAT_ENC_CSN_ID",
      "CONTACT_DATE",
      "DEPARTMENT_ID",
      "LINE",
      "PRIMARY_DX_YN",
      "DX_NAME"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-7",
    "originalQuery": "-- Multiple diagnoses paint the full clinical picture\nSELECT \n  pe.PAT_ENC_CSN_ID,\n  pe.CONTACT_DATE,\n  dx.LINE,\n  CASE \n    WHEN dx.PRIMARY_DX_YN = 'Y' THEN 'PRIMARY'\n    ELSE 'Secondary'\n  END as dx_role,\n  edg.DX_NAME,\n  dx.DX_CHRONIC_YN              -- Is this a chronic condition?\nFROM PAT_ENC pe\nJOIN PAT_ENC_DX dx ON pe.PAT_ENC_CSN_ID = dx.PAT_ENC_CSN_ID\nJOIN CLARITY_EDG edg ON dx.DX_ID = edg.DX_ID\nWHERE pe.PAT_ENC_CSN_ID = '988126821'\nORDER BY dx.LINE;",
    "description": "See complete diagnostic picture for a visit",
    "chapterId": "03.1-patients-and-encounters",
    "index": 7,
    "results": [
      {
        "PAT_ENC_CSN_ID": 988126821,
        "CONTACT_DATE": "2/19/2023 12:00:00 AM",
        "LINE": 1,
        "dx_role": "Secondary",
        "DX_NAME": "Post concussion syndrome",
        "DX_CHRONIC_YN": "N"
      }
    ],
    "columns": [
      "PAT_ENC_CSN_ID",
      "CONTACT_DATE",
      "LINE",
      "dx_role",
      "DX_NAME",
      "DX_CHRONIC_YN"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-8",
    "originalQuery": "-- VISIT_PROV_ID is just the beginning\nSELECT \n  pe.PAT_ENC_CSN_ID,\n  pe.CONTACT_DATE,\n  -- Primary visit provider\n  pe.VISIT_PROV_ID,\n  pe.VISIT_PROV_TITLE_NAME,\n  -- Primary care provider at time of visit\n  pe.PCP_PROV_ID,\n  -- Supervising provider (from PAT_ENC_2)\n  peh.SUP_PROV_ID,\n  peh.SUP_PROV_C_NAME as supervising_provider_type\nFROM PAT_ENC pe\nLEFT JOIN PAT_ENC_2 peh ON pe.PAT_ENC_CSN_ID = peh.PAT_ENC_CSN_ID\nWHERE pe.PAT_ID = 'Z7004242'\n  AND pe.APPT_STATUS_C_NAME = 'Completed'\nORDER BY pe.CONTACT_DATE DESC\nLIMIT 5;",
    "description": "Identify the care team for encounters",
    "chapterId": "03.1-patients-and-encounters",
    "index": 8,
    "results": [
      {
        "PAT_ENC_CSN_ID": 991225117,
        "CONTACT_DATE": "9/28/2023 12:00:00 AM",
        "VISIT_PROV_ID": 144590,
        "VISIT_PROV_TITLE_NAME": "MD",
        "PCP_PROV_ID": 144590,
        "SUP_PROV_ID": "",
        "supervising_provider_type": ""
      },
      {
        "PAT_ENC_CSN_ID": 1028743701,
        "CONTACT_DATE": "9/28/2023 12:00:00 AM",
        "VISIT_PROV_ID": 3724611,
        "VISIT_PROV_TITLE_NAME": "",
        "PCP_PROV_ID": 144590,
        "SUP_PROV_ID": "",
        "supervising_provider_type": ""
      },
      {
        "PAT_ENC_CSN_ID": 720803470,
        "CONTACT_DATE": "8/9/2018 12:00:00 AM",
        "VISIT_PROV_ID": 802011,
        "VISIT_PROV_TITLE_NAME": "MD",
        "PCP_PROV_ID": 802011,
        "SUP_PROV_ID": "",
        "supervising_provider_type": ""
      },
      {
        "PAT_ENC_CSN_ID": 724628999,
        "CONTACT_DATE": "8/9/2018 12:00:00 AM",
        "VISIT_PROV_ID": 3724611,
        "VISIT_PROV_TITLE_NAME": "",
        "PCP_PROV_ID": 802011,
        "SUP_PROV_ID": "",
        "supervising_provider_type": ""
      },
      {
        "PAT_ENC_CSN_ID": 948004323,
        "CONTACT_DATE": "8/29/2022 12:00:00 AM",
        "VISIT_PROV_ID": 144590,
        "VISIT_PROV_TITLE_NAME": "MD",
        "PCP_PROV_ID": 144590,
        "SUP_PROV_ID": "",
        "supervising_provider_type": ""
      }
    ],
    "columns": [
      "PAT_ENC_CSN_ID",
      "CONTACT_DATE",
      "VISIT_PROV_ID",
      "VISIT_PROV_TITLE_NAME",
      "PCP_PROV_ID",
      "SUP_PROV_ID",
      "supervising_provider_type"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-9",
    "originalQuery": "-- See the full patient journey\nSELECT \n  CONTACT_DATE,\n  PAT_ENC_CSN_ID,\n  DEPARTMENT_ID,\n  APPT_STATUS_C_NAME,\n  -- Time between visits\n  JULIANDAY(CONTACT_DATE) - \n    JULIANDAY(LAG(CONTACT_DATE) OVER (ORDER BY CONTACT_DATE)) as days_since_last_visit\nFROM PAT_ENC\nWHERE PAT_ID = '28411874'\n  AND APPT_STATUS_C_NAME = 'Completed'\nORDER BY CONTACT_DATE DESC\nLIMIT 20;",
    "description": "Build a patient's care timeline",
    "chapterId": "03.1-patients-and-encounters",
    "index": 9,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-10",
    "originalQuery": "-- Where does this patient go for care?\nSELECT \n  pe.DEPARTMENT_ID,\n  cd.DEPARTMENT_NAME,\n  COUNT(*) as visit_count,\n  MIN(pe.CONTACT_DATE) as first_visit,\n  MAX(pe.CONTACT_DATE) as last_visit,\n  -- Average time between visits to this department\n  ROUND(\n    JULIANDAY(MAX(pe.CONTACT_DATE)) - JULIANDAY(MIN(pe.CONTACT_DATE)) \n    / NULLIF(COUNT(*) - 1, 0), \n    1\n  ) as avg_days_between_visits\nFROM PAT_ENC pe\nLEFT JOIN CLARITY_DEP cd ON pe.DEPARTMENT_ID = cd.DEPARTMENT_ID\nWHERE pe.PAT_ID = 'Z7004242'\n  AND pe.APPT_STATUS_C_NAME = 'Completed'\nGROUP BY pe.DEPARTMENT_ID, cd.DEPARTMENT_NAME\nHAVING COUNT(*) > 1  -- Departments visited multiple times\nORDER BY visit_count DESC;",
    "description": "Analyze department utilization patterns",
    "chapterId": "03.1-patients-and-encounters",
    "index": 10,
    "results": [
      {
        "DEPARTMENT_ID": 1700801002,
        "DEPARTMENT_NAME": "MAC APL INTERNAL MEDICINE",
        "visit_count": 7,
        "first_visit": "1/9/2020 12:00:00 AM",
        "last_visit": "9/28/2023 12:00:00 AM",
        "avg_days_between_visits": null
      },
      {
        "DEPARTMENT_ID": 1700801005,
        "DEPARTMENT_NAME": "MAC APL LABORATORY",
        "visit_count": 4,
        "first_visit": "8/18/2018 12:00:00 AM",
        "last_visit": "9/28/2023 12:00:00 AM",
        "avg_days_between_visits": null
      },
      {
        "DEPARTMENT_ID": 101401044,
        "DEPARTMENT_NAME": "MHM OT NEURO CENTRAL",
        "visit_count": 2,
        "first_visit": "3/11/2022 12:00:00 AM",
        "last_visit": "3/22/2022 12:00:00 AM",
        "avg_days_between_visits": null
      }
    ],
    "columns": [
      "DEPARTMENT_ID",
      "DEPARTMENT_NAME",
      "visit_count",
      "first_visit",
      "last_visit",
      "avg_days_between_visits"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-11",
    "originalQuery": "-- Hospital stays have duration\nSELECT \n  pe.PAT_ENC_CSN_ID,\n  pe.CONTACT_DATE,\n  pe.HOSP_ADMSN_TIME,\n  pe.HOSP_DISCHRG_TIME,\n  -- Calculate length of stay\n  ROUND(\n    JULIANDAY(pe.HOSP_DISCHRG_TIME) - JULIANDAY(pe.HOSP_ADMSN_TIME), \n    1\n  ) as length_of_stay_days,\n  -- Get additional hospital details\n  peh.ADT_PAT_CLASS_C_NAME,    -- Inpatient, Observation, etc.\n  peh.ADMIT_SOURCE_C_NAME       -- Where patient came from\nFROM PAT_ENC pe\nJOIN PAT_ENC_HSP peh ON pe.PAT_ENC_CSN_ID = peh.PAT_ENC_CSN_ID\nWHERE pe.HOSP_ADMSN_TIME IS NOT NULL\n  AND pe.HOSP_DISCHRG_TIME IS NOT NULL\nORDER BY pe.HOSP_ADMSN_TIME DESC\nLIMIT 10;",
    "description": "Calculate length of stay for admissions",
    "chapterId": "03.1-patients-and-encounters",
    "index": 11,
    "results": [
      {
        "PAT_ENC_CSN_ID": 922943112,
        "CONTACT_DATE": "3/22/2022 12:00:00 AM",
        "HOSP_ADMSN_TIME": "3/22/2022 4:42:00 PM",
        "HOSP_DISCHRG_TIME": "3/22/2022 11:59:00 PM",
        "length_of_stay_days": null,
        "ADT_PAT_CLASS_C_NAME": "Therapies Series",
        "ADMIT_SOURCE_C_NAME": "Self"
      },
      {
        "PAT_ENC_CSN_ID": 922942674,
        "CONTACT_DATE": "3/11/2022 12:00:00 AM",
        "HOSP_ADMSN_TIME": "3/11/2022 2:41:00 PM",
        "HOSP_DISCHRG_TIME": "3/11/2022 11:59:00 PM",
        "length_of_stay_days": null,
        "ADT_PAT_CLASS_C_NAME": "Therapies Series",
        "ADMIT_SOURCE_C_NAME": "Self"
      }
    ],
    "columns": [
      "PAT_ENC_CSN_ID",
      "CONTACT_DATE",
      "HOSP_ADMSN_TIME",
      "HOSP_DISCHRG_TIME",
      "length_of_stay_days",
      "ADT_PAT_CLASS_C_NAME",
      "ADMIT_SOURCE_C_NAME"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-12",
    "originalQuery": "-- See how patients flow through the hospital\nSELECT \n  pe.PAT_ENC_CSN_ID,\n  pe.CONTACT_DATE,\n  peh.ADT_ARRIVAL_TIME as ed_arrival,\n  pe.HOSP_ADMSN_TIME as admission_time,\n  -- Time from ED arrival to admission\n  ROUND(\n    (JULIANDAY(pe.HOSP_ADMSN_TIME) - JULIANDAY(peh.ADT_ARRIVAL_TIME)) * 24, \n    1\n  ) as ed_to_admit_hours,\n  peh.ADT_PAT_CLASS_C_NAME\nFROM PAT_ENC pe\nJOIN PAT_ENC_HSP peh ON pe.PAT_ENC_CSN_ID = peh.PAT_ENC_CSN_ID\nWHERE peh.ADT_ARRIVAL_TIME IS NOT NULL\n  AND pe.HOSP_ADMSN_TIME IS NOT NULL\n  AND peh.ADT_ARRIVAL_TIME < pe.HOSP_ADMSN_TIME\nORDER BY pe.CONTACT_DATE DESC\nLIMIT 10;",
    "description": "Track ED to inpatient transitions",
    "chapterId": "03.1-patients-and-encounters",
    "index": 12,
    "results": [
      {
        "PAT_ENC_CSN_ID": 922943112,
        "CONTACT_DATE": "3/22/2022 12:00:00 AM",
        "ed_arrival": "",
        "admission_time": "3/22/2022 4:42:00 PM",
        "ed_to_admit_hours": null,
        "ADT_PAT_CLASS_C_NAME": "Therapies Series"
      },
      {
        "PAT_ENC_CSN_ID": 922942674,
        "CONTACT_DATE": "3/11/2022 12:00:00 AM",
        "ed_arrival": "",
        "admission_time": "3/11/2022 2:41:00 PM",
        "ed_to_admit_hours": null,
        "ADT_PAT_CLASS_C_NAME": "Therapies Series"
      }
    ],
    "columns": [
      "PAT_ENC_CSN_ID",
      "CONTACT_DATE",
      "ed_arrival",
      "admission_time",
      "ed_to_admit_hours",
      "ADT_PAT_CLASS_C_NAME"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-13",
    "originalQuery": "-- Identify complex patients by their diagnosis patterns\nWITH chronic_dx AS (\n  SELECT \n    pe.PAT_ID,\n    COUNT(DISTINCT edg.DX_NAME) as unique_chronic_conditions,\n    GROUP_CONCAT(edg.DX_NAME, '; ') as chronic_conditions\n  FROM PAT_ENC pe\n  JOIN PAT_ENC_DX dx ON pe.PAT_ENC_CSN_ID = dx.PAT_ENC_CSN_ID\n  JOIN CLARITY_EDG edg ON dx.DX_ID = edg.DX_ID\n  WHERE dx.DX_CHRONIC_YN = 'Y'\n    AND pe.CONTACT_DATE >= date('now', '-2 years')\n  GROUP BY pe.PAT_ID\n)\nSELECT \n  p.PAT_ID,\n  p.PAT_NAME,\n  cd.unique_chronic_conditions,\n  cd.chronic_conditions\nFROM PATIENT p\nJOIN chronic_dx cd ON p.PAT_ID = cd.PAT_ID\nWHERE cd.unique_chronic_conditions >= 3\nORDER BY cd.unique_chronic_conditions DESC\nLIMIT 10;",
    "description": "Find patients with multiple chronic conditions",
    "chapterId": "03.1-patients-and-encounters",
    "index": 13,
    "results": [],
    "columns": [],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-14",
    "originalQuery": "-- Who uses the most healthcare resources?\nWITH utilization AS (\n  SELECT \n    PAT_ID,\n    COUNT(DISTINCT PAT_ENC_CSN_ID) as total_encounters,\n    COUNT(DISTINCT CASE \n      WHEN HOSP_ADMSN_TIME IS NOT NULL THEN PAT_ENC_CSN_ID \n    END) as hospital_admissions,\n    COUNT(DISTINCT DATE(CONTACT_DATE)) as unique_contact_days,\n    MIN(CONTACT_DATE) as first_contact,\n    MAX(CONTACT_DATE) as last_contact\n  FROM PAT_ENC\n  WHERE APPT_STATUS_C_NAME = 'Completed'\n    AND CONTACT_DATE >= date('now', '-1 year')\n  GROUP BY PAT_ID\n)\nSELECT \n  p.PAT_ID,\n  p.PAT_NAME,\n  u.total_encounters,\n  u.hospital_admissions,\n  u.unique_contact_days,\n  -- Encounters per month\n  ROUND(\n    u.total_encounters * 30.0 / \n    NULLIF(JULIANDAY(u.last_contact) - JULIANDAY(u.first_contact), 0), \n    1\n  ) as encounters_per_month\nFROM PATIENT p\nJOIN utilization u ON p.PAT_ID = u.PAT_ID\nWHERE u.total_encounters >= 10\nORDER BY u.total_encounters DESC\nLIMIT 20;",
    "description": "Find high-utilization patients",
    "chapterId": "03.1-patients-and-encounters",
    "index": 14,
    "results": [
      {
        "PAT_ID": "Z7004242",
        "PAT_NAME": "MANDEL,JOSHUA C",
        "total_encounters": 11,
        "hospital_admissions": 11,
        "unique_contact_days": 0,
        "encounters_per_month": null
      }
    ],
    "columns": [
      "PAT_ID",
      "PAT_NAME",
      "total_encounters",
      "hospital_admissions",
      "unique_contact_days",
      "encounters_per_month"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-15",
    "originalQuery": "-- Look for potential data problems\nSELECT \n  'Missing department' as issue,\n  COUNT(*) as count\nFROM PAT_ENC\nWHERE DEPARTMENT_ID IS NULL\n  AND APPT_STATUS_C_NAME = 'Completed'\n\nUNION ALL\n\nSELECT \n  'Discharge before admission' as issue,\n  COUNT(*) as count\nFROM PAT_ENC\nWHERE HOSP_DISCHRG_TIME < HOSP_ADMSN_TIME\n\nUNION ALL\n\nSELECT \n  'Missing visit provider' as issue,\n  COUNT(*) as count\nFROM PAT_ENC\nWHERE VISIT_PROV_ID IS NULL\n  AND APPT_STATUS_C_NAME = 'Completed'\n\nUNION ALL\n\nSELECT \n  'Future contact dates' as issue,\n  COUNT(*) as count\nFROM PAT_ENC\nWHERE CONTACT_DATE > date('now');",
    "description": "Check for data quality issues",
    "chapterId": "03.1-patients-and-encounters",
    "index": 15,
    "results": [
      {
        "issue": "Missing department",
        "count": 0
      },
      {
        "issue": "Discharge before admission",
        "count": 2
      },
      {
        "issue": "Missing visit provider",
        "count": 0
      },
      {
        "issue": "Future contact dates",
        "count": 74
      }
    ],
    "columns": [
      "issue",
      "count"
    ],
    "error": null
  },
  {
    "id": "03.1-patients-and-encounters-16",
    "originalQuery": "-- How complete is our patient data?\nSELECT \n  COUNT(*) as total_patients,\n  -- Core identifiers\n  SUM(CASE WHEN PAT_MRN_ID IS NOT NULL THEN 1 ELSE 0 END) as has_mrn,\n  SUM(CASE WHEN SSN IS NOT NULL THEN 1 ELSE 0 END) as has_ssn,\n  -- Demographics\n  SUM(CASE WHEN BIRTH_DATE IS NOT NULL THEN 1 ELSE 0 END) as has_birth_date,\n  SUM(CASE WHEN SEX_C_NAME_ IS NOT NULL THEN 1 ELSE 0 END) as has_sex,\n  -- Contact info\n  SUM(CASE WHEN EMAIL_ADDRESS IS NOT NULL THEN 1 ELSE 0 END) as has_email,\n  SUM(CASE WHEN HOME_PHONE IS NOT NULL THEN 1 ELSE 0 END) as has_phone,\n  -- Calculate percentages\n  ROUND(100.0 * SUM(CASE WHEN EMAIL_ADDRESS IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*), 1) as pct_with_email\nFROM PATIENT;",
    "description": "Assess demographic data completeness",
    "chapterId": "03.1-patients-and-encounters",
    "index": 16,
    "results": [
      {
        "total_patients": 1,
        "has_mrn": 1,
        "has_ssn": 1,
        "has_birth_date": 1,
        "has_sex": 1,
        "has_email": 1,
        "has_phone": 1,
        "pct_with_email": 100
      }
    ],
    "columns": [
      "total_patients",
      "has_mrn",
      "has_ssn",
      "has_birth_date",
      "has_sex",
      "has_email",
      "has_phone",
      "pct_with_email"
    ],
    "error": null
  }
]